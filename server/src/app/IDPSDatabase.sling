import jk.log
import jk.sqlite
import jk.mysql
import jk.sql
import jk.env
import jk.time

class:

pvar db as MySQLDatabase

func forContext(ctx as LoggingContext) static as this
{
    var cstr = EnvironmentVariable.get("IDPS_DATABASE")
    Log.debug(ctx, "Opening data connectoion:'" .. cstr .. "'")
    db = MySQLDatabase.forConnectionStringSync(ctx,cstr)
    if not db:
        Error.throw("failedToConnectDatabase", cstr)
    var v = new this()

    v.setDb(db)
    return  v
}

func updateTable(tbl as SQLTableInfo)
{
    if not tbl:
        Error.throw("nullTable", "updateTable")
    if not db:
        Error.throw("nullDB", "updateTable")
    if not db.ensureTableExistsSync(tbl):
        Error.throw("failedToUpdateTable", tbl.getName())
}

func updateTables
{
    updateTable(IDPSTable.createTableInfant())
    updateTable(IDPSTable.createTableUser())
}

func close
{
    if db:
        db.closeSync()
    db = null
}
